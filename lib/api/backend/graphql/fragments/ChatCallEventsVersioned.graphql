# Copyright Â© 2022 IT ENGINEERING MANAGEMENT INC, <https://github.com/team113>
#
# This program is free software: you can redistribute it and/or modify it under
# the terms of the GNU Affero General Public License v3.0 as published by the
# Free Software Foundation, either version 3 of the License, or (at your
# option) any later version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License v3.0 for
# more details.
#
# You should have received a copy of the GNU Affero General Public License v3.0
# along with this program. If not, see
# <https://www.gnu.org/licenses/agpl-3.0.html>.

fragment ChatCallEventsVersioned on ChatCallEventsVersioned {
    events {
        __typename
        callId
        chatId
        at
        ... on EventChatCallMemberRedialed {
            call {
                __typename
                ...ChatCall
            }
            user {
                __typename
                ...User
            }
            byUser {
                __typename
                ...User
            }
        }
        ... on EventChatCallFinished {
            call {
                __typename
                ...ChatCall
            }
            reason
        }
        ... on EventChatCallRoomReady {
            call {
                __typename
                ...ChatCall
            }
            joinLink
        }
        ... on EventChatCallMemberLeft {
            call {
                __typename
                ...ChatCall
            }
            user {
                __typename
                ...User
            }
            deviceId
        }
        ... on EventChatCallMemberJoined {
            call {
                __typename
                ...ChatCall
            }
            user {
                __typename
                ...User
            }
            deviceId
        }
        ... on EventChatCallHandLowered {
            call {
                __typename
                ...ChatCall
            }
            user {
                __typename
                ...User
            }
        }
        ... on EventChatCallMoved {
            call {
                __typename
                ...ChatCall
            }
            newChatId
            newChat {
                __typename
                ...Chat
            }
            newCallId
            newCall {
                __typename
                ...ChatCall
            }
            user {
                __typename
                ...User
            }
        }
        ... on EventChatCallHandRaised {
            call {
                __typename
                ...ChatCall
            }
            user {
                __typename
                ...User
            }
        }
        ... on EventChatCallDeclined {
            call {
                __typename
                ...ChatCall
            }
            user {
                __typename
                ...User
            }
        }
    }
    ver
}
