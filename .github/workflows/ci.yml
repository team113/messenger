name: CI

on:
  push:
    branches: ["main"]
    tags: ["v*"]
  pull_request:
    branches: ["main"]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  FLUTTER_VER: "3.0"

jobs:

  ################
  # Pull Request #
  ################

  pr:
    if: ${{ github.event_name == 'pull_request' }}
    needs:
      - build
      - copyright
      - dartanalyze
      - dartdoc
      - dartfmt
      - pubspec
      - test-unit
    runs-on: ubuntu-latest
    steps:
      - run: true




  ##########################
  # Linting and formatting #
  ##########################

  copyright:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - run: make copyright check=yes

  dartanalyze:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: $FLUTTER_VER
          channel: stable
          cache: true

      - run: make flutter.pub

      - run: make flutter.analyze

  dartfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: $FLUTTER_VER
          channel: stable
          cache: true

      - run: make flutter.fmt check=yes

  pubspec:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: $FLUTTER_VER
          channel: stable
          cache: true

      - run: make flutter.pub

      - name: Check `pubspec.lock` is in sync with `pubspec.yaml`
        run: git diff --exit-code




  ############
  # Building #
  ############

  build:
    strategy:
      fail-fast: false
      matrix:
        platform:
          - apk
          # TODO: Uncomment once `flutter_webrtc` supports iOS platform.
          #- ios
          - linux
          # TODO: Uncomment once `flutter_webrtc` supports macOS platform.
          #- macos
          - web
          - windows
    # TODO: Change `linux` platform to `ubuntu-latest` when 22.04 is out of beta.
    runs-on: ${{ ((matrix.platform == 'ios' || matrix.platform == 'macos')
                                                  && 'macos-latest')
                 || (matrix.platform == 'windows' && 'windows-latest')
                 || (matrix.platform == 'linux'   && 'ubuntu-22.04')
                                                  || 'ubuntu-latest' }}
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: $FLUTTER_VER
          channel: stable
          cache: true

      - run: sudo apt-get update -y
        if: ${{ matrix.platform == 'linux' }}
      - run: sudo apt-get install -y
             ninja-build
             libunwind-dev
             libgtk-3-dev
             libgstreamer1.0-dev
             libgstreamer-plugins-base1.0-dev
             libpulse-dev
        if: ${{ matrix.platform == 'linux' }}

      - run: flutter config --enable-${{ matrix.platform }}-desktop
        if: ${{ matrix.platform == 'linux'
                || matrix.platform == 'macos'
                || matrix.platform == 'windows' }}

      - run: make flutter.pub

      - run: make flutter.build platform=${{ matrix.platform }}

  dartdoc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: $FLUTTER_VER
          channel: stable
          cache: true

      - run: make flutter.pub

      - run: make docs.dart clean=yes




  ###########
  # Testing #
  ###########

  test-unit:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: $FLUTTER_VER
          channel: stable
          cache: true

      - run: make flutter.pub

      - run: make test.unit
